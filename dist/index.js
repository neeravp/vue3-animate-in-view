import{ref as e,computed as t,watch as n,defineComponent as o,onMounted as i,onBeforeUnmount as l,openBlock as s,createBlock as a,renderSlot as r}from"vue";var c={observeElement:function(e,t,n){console.log(e);const o=(e=>function(t){t.forEach((t=>{e(t)}))})(t);new IntersectionObserver(o,n).observe(e)}};let u;var d={detectScrollDirection:function(e){let t=window.pageYOffset,n=!1;u=()=>{const o=window.pageYOffset||document.documentElement.scrollTop;n||(window.requestAnimationFrame((()=>{e(t,o),t=o<=0?0:o,n=!1})),n=!0)},window.addEventListener("scroll",u)},removeEventListener:function(){window.removeEventListener("scroll",u)}};const v=e(!1),p=e("down");let f,m,w;const g=t((()=>{let e="";return"string"==typeof f&&(e=f),"object"==typeof f&&(e="down"===p.value?f.down:f.up),e}));const y=(e,t)=>{p.value=t<e?"up":"down",e=t<=0?0:t},L=e=>{e.isIntersecting?(w.classList.add(g.value),v.value=!0):v.value=!1};var b={apply:function(e,t,o){console.log(e,t,o),f=t,m=o,w=e,c.observeElement(w,L),d.detectScrollDirection(y),n([v,p],((e,t)=>{const[n,o]=e;m||"string"!=typeof f?n?"object"==typeof f&&""!==f.up&&""!==f.down&&(console.log("isBiDirectional"),f=f,"up"===o&&(w.classList.remove(f.down),w.classList.add(g.value)),"down"===o&&(w.classList.remove(f.up),w.classList.add(g.value))):(console.log("Not in view"),w.classList.remove(g.value)):console.log("No Repeat & isDirectionAgnostic: false")}))},cleanup:function(){d.removeEventListener()}},E=o({name:"AnimateInView",props:{threshold:{type:Number,default:10},animation:{type:[String,Object],default:"fadeInSlide"},repeat:{type:Boolean,default:!1}},setup(t){const n=e();return i((()=>{console.log(n.value),b.apply(n.value,t.animation,t.repeat)})),l((()=>b.cleanup())),{target:n}}});const I={class:"transition-all duration-1000",ref:"target"};E.render=function(e,t,n,o,i,l){return s(),a("div",I,[r(e.$slots,"default")],512)},E.__file="src/AnimateInView.vue";const A={mounted(e,t){const n=t.value,o=t.modifiers.repeat||!1;b.apply(e,n,o)},beforeUnmount(){b.cleanup()}},D={install:(e,t)=>{e.directive("animate-inview",A),e.component("animate-in-view",E)}};export default D;
